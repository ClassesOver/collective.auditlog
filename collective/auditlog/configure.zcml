<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    i18n_domain="collective.auditlog">

  <five:registerPackage package="." initialize=".initialize" />

  <genericsetup:registerProfile
      name="default"
      title="Audit Log"
      directory="profiles/default"
      description="Installs the collective.auditlog package"
      provides="Products.GenericSetup.interfaces.EXTENSION"
      />

  <include package=".conditions" />
  <include file="profiles.zcml" />
  <include file="skins.zcml" />

    <interface
      interface="plone.app.iterate.interfaces.IAfterCheckinEvent"
      type="plone.contentrules.rule.interfaces.IRuleEventType"
      name="A working copy has been checked in."
      />

    <interface
      interface="plone.app.iterate.interfaces.ICheckoutEvent"
      type="plone.contentrules.rule.interfaces.IRuleEventType"
      name="An object has been checked out."
      />

    <interface
      interface="plone.app.iterate.interfaces.ICancelCheckoutEvent"
      type="plone.contentrules.rule.interfaces.IRuleEventType"
      name="A working copy has been cancelled."
      />

    <interface
      interface="zope.lifecycleevent.interfaces.IObjectMovedEvent"
      type="plone.contentrules.rule.interfaces.IRuleEventType"
      name="An object has been moved"
      />



   <!-- Register handlers -->

    <!-- Rule triggers -->

 
    <subscriber
      for="plone.app.iterate.interfaces.IAfterCheckinEvent"
      handler=".handlers.checkin_action"
      />

    <subscriber
      for="plone.app.iterate.interfaces.ICheckoutEvent"
      handler=".handlers.checkout_action"
      />

    <subscriber
      for="plone.app.iterate.interfaces.ICancelCheckoutEvent"
      handler=".handlers.cancel_checkout_action"
      />

    <subscriber
      for="zope.app.container.interfaces.IObjectAddedEvent"
      handler=".handlers.added"
      />

    <subscriber
      for="Products.Archetypes.interfaces.IBaseObject
           zope.lifecycleevent.interfaces.IObjectRemovedEvent"
      handler=".handlers.confirmed_removed"
      />

    <subscriber
      for="zope.lifecycleevent.interfaces.IObjectMovedEvent"
      handler=".handlers.moved"
      />


</configure>



